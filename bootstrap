#!/bin/env sh

set -euo pipefail

function git_pull() {
    local repo="$(git_repo "${1}")"
    local branch="${2:-master}"
    local dir="${3:-$(local_share_dir "${1}")}"
    local parent_dir="$(dirname "${dir}")"

    if [ -e "${dir}" ]
    then
        run_or_dry_run \
        git \
        --git-dir="${dir}/.git" \
        --work-tree="${dir}" \
        pull \
        --no-commit
    else
        [ -e "${parent_dir}" ] || run_or_dry_run mkdir -p "${parent_dir}"
        run_or_dry_run git clone -b "${branch}" "${repo}" "${dir}"
    fi
}

function git_repo() {
    echo "https://github.com/${1}"
}

function help() {
    cat << EOF
${0} [OPTIONS]...

Options:
    -h          show help
    -n          dry run
EOF
}

function local_share_dir() {
    echo "${HOME}/.local/share/${1##*/}"
}

function run_or_dry_run() {
    if [ -n "${DRY_RUN}" ]
    then
        echo -e '[\033[1;32mPASS\e[0m]' "${@}" >&2
        PASS=$((${PASS} + 1))
    else
        if "${@}" >&2
        then
            echo -e '[\033[1;32mPASS\e[0m]' "${@}" >&2
            PASS=$((${PASS} + 1))
        else
            echo -e '[\033[1;31mFAIL\e[0m]' "${@}" >&2
            FAIL=$((${FAIL} + 1))
        fi
    fi
}

DRY_RUN=
PASS=0
FAIL=0

while getopts 'hn' OPT
do
    case "${OPT}" in
        h)
            help
            exit
            ;;
        n)
            DRY_RUN=yes
            ;;
    esac
done

shift $((OPTIND - 1))

git_pull t13a/dotfiles
git_pull t13a/eow
git_pull t13a/synaptics-one-finger
git_pull VundleVim/Vundle.vim master ${HOME}/.vim/bundle/Vundle.vim
git_pull tmux-plugins/tpm master ${HOME}/.tmux/plugins/tpm

run_or_dry_run "$(local_share_dir dotfiles)/dotfiles" install

echo "Done (${PASS}/$((${PASS} + ${FAIL})))" >&2

[ ${FAIL} -eq 0 ] && exit 0 || exit 1
